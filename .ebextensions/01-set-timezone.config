# files - 파일을 생성, 소스 코드와 함께 복사됨, 다른 스크립트에서 참조 가능
# commands - 소스 코드 복사 되기 전 (root), 이 명령으로 생성된 파일은 소스 코드와 함께 복사되지 않음
# container_commands - commands 이후, 애플리케이션 아카이브가 압축이 풀린 후 복사된 디렉토리에서 실행된다. ( webapp )
# /sbin/appstart - commands, container_commands 이후 ( root )


commands:
  create_post_dir:
    # 배포된 후 실행되는 후크
    command: mkdir /opt/elasticbeanstalk/hooks/appdeploy/post
    ignoreErrors: true

files:
  "/opt/elasticbeanstalk/hooks/appdeploy/post/01-run-script.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #! /bin/bash
      rm /etc/localtime
      ln -f -s /usr/share/zoneinfo/Asia/Seoul /etc/localtime




# 도커 환경으로 만든 EB는 자동으로 EC2를 도커 환경을 만든다.
#  01_install_docker:
#    command: |
#      if ! command -v docker &> /dev/null; then
#        sudo apt install -y docker.io
#        sudo systemctl start docker 
#        sudo systemctl enable docker
#        sudo usermod -aG docker ubuntu
#      else
#        echo "Docker is already installed"
#      fi
#  02_install_docker_compose:
#    command: |
#      if ! command -v docker-compose &> /dev/null; then
#        sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
#        sudo chmod +x /usr/local/bin/docker-compose
#      fi


